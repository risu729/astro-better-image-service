name: E2E Test

on:
  pull_request:
    branches:
      - main
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * SUN"

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  list-astro-versions:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read # for checkout

    outputs:
      astro-versions: ${{ steps.list.outputs.versions }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          version: 2025.2.9
          cache_save: ${{ github.ref_name == 'main' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: List astro versions for E2E tests
        id: list
        run: |
          versions=$(mise run test:list-astro-versions)
          echo "versions=${versions}" >> "${GITHUB_OUTPUT}"

  test-e2e-general:
    needs:
      - list-astro-versions

    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read # for checkout

    name: test-e2e-general-astro-${{ matrix.version }}
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.list-astro-versions.outputs.astro-versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          version: 2025.2.9
          cache_save: ${{ github.ref_name == 'main' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build Package
        run: mise run build

      - name: Install E2E Test Fixtures Dependencies
        run: bun install astro@${{ matrix.version }}
        working-directory: tests/e2e/fixtures

      - name: Build E2E Test Fixtures with astro-better-image-service
        run: bun run build
        working-directory: tests/e2e/fixtures

      - name: Store Dependency Versions
        id: dependency-versions
        run: |
          playwright_version=$(bun pm ls | sed -nE 's/.*@playwright\/test@(.+)/\1/p')
          echo "playwright=${playwright_version}" >> "${GITHUB_OUTPUT}"

      - name: Restore Playwright Browsers Cache
        id: restore-browsers-cache
        uses: actions/cache/restore@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ steps.dependency-versions.outputs.playwright }}

      - name: Install Playwright Browsers and Dependencies
        id: playwright-install
        if: steps.restore-browsers-cache.outputs.cache-hit != 'true'
        run: bun run playwright install chromium --with-deps

      - name: Save Playwright Browsers Cache
        if: steps.restore-browsers-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ~/.cache/ms-playwright
          key: ${{ steps.restore-browsers-cache.outputs.cache-primary-key }}

      - name: Install Playwright Dependencies
        if: steps.playwright-install.outcome == 'skipped'
        run: bun run playwright install-deps chromium

      - name: Playwright Test
        id: playwright-test
        run: mise run test:e2e

      - name: Upload the Playwright Report
        # use failure() because success() is used implicitly
        # ref: https://docs.github.com/en/actions/learn-github-actions/expressions#status-check-functions
        if: failure() && steps.playwright-test.outcome == 'failure'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: playwright-report-astro-${{ matrix.version }}-${{ github.sha }}
          path: playwright-report/

  test-e2e-conversion:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read # for checkout

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install mise
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2.1.11
        with:
          version: 2025.2.9
          cache_save: ${{ github.ref_name == 'main' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build Package
        run: mise run build

      - name: Store Dependency Versions
        id: dependency-versions
        run: |
          playwright_version=$(bun pm ls | sed -nE 's/.*@playwright\/test@(.+)/\1/p')
          astro_version=$(bun pm ls | sed -nE 's/.*astro@(.+)/\1/p' | uniq)
          # throw error if several versions are found
          if [[ $(echo "${astro_version}" | wc -l) -gt 1 ]]; then
            echo "Multiple versions of Astro found: ${astro_version}"
            exit 1
          fi
          echo "playwright=${playwright_version}" >> "${GITHUB_OUTPUT}"
          echo "astro=${astro_version}" >> "${GITHUB_OUTPUT}"

      - name: Restore Playwright Browsers Cache
        id: restore-browsers-cache
        uses: actions/cache/restore@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ steps.dependency-versions.outputs.playwright }}

      - name: Install Playwright Browsers and Dependencies
        id: playwright-install
        if: steps.restore-browsers-cache.outputs.cache-hit != 'true'
        run: bun run playwright install chromium --with-deps

      - name: Save Playwright Browsers Cache
        if: steps.restore-browsers-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ~/.cache/ms-playwright
          key: ${{ steps.restore-browsers-cache.outputs.cache-primary-key }}

      - name: Install Playwright Dependencies
        if: steps.playwright-install.outcome == 'skipped'
        run: bun run playwright install-deps chromium

      - name: Store Hash of E2E Test Fixtures and Image Service Consistency Test
        id: fixtures-hash
        run: echo "hash=${{ hashFiles('tests/e2e/fixtures/**/*', 'tests/e2e/conversion.test.ts') }}" >> "${GITHUB_OUTPUT}"

      - name: Install E2E Test Fixtures Dependencies
        run: bun install --save-text-lockfile
        working-directory: tests/e2e/fixtures

      - name: Restore Snapshots Cache
        id: restore-snapshots-cache
        uses: actions/cache/restore@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: tests/e2e/conversion.test.ts-snapshots
          key: "default-service-snapshots-${{ runner.os }}-${{ steps.dependency-versions.outputs.astro }}-${{ steps.dependency-versions.outputs.playwright }}-${{ steps.fixtures-hash.outputs.hash }}"

      - name: Build E2E Test Fixtures with the Default Image Service
        if: steps.restore-snapshots-cache.outputs.cache-hit != 'true'
        run: bun run build
        working-directory: tests/e2e/fixtures
        env:
          USE_DEFAULT_IMAGE_SERVICE: true

      - name: Take Snapshots with the Default Image Service
        if: steps.restore-snapshots-cache.outputs.cache-hit != 'true'
        run: bun run playwright test conversion --update-snapshots
        env:
          USE_DEFAULT_IMAGE_SERVICE: true

      - name: Save Snapshots Cache
        if: steps.restore-snapshots-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: tests/e2e/conversion.test.ts-snapshots
          key: ${{ steps.restore-snapshots-cache.outputs.cache-primary-key }}

      - name: Build E2E Test Fixtures with astro-better-image-service
        run: bun run build
        working-directory: tests/e2e/fixtures

      - name: Playwright Image Services Consistency Test
        id: playwright-test-conversion
        run: bun run playwright test conversion

      - name: Upload the Playwright Report of Image Services Consistency Test
        # use failure() because success() is used implicitly
        # ref: https://docs.github.com/en/actions/learn-github-actions/expressions#status-check-functions
        if: failure() && steps.playwright-test-conversion.outcome == 'failure'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: playwright-report-conversion-${{ github.sha }}
          path: playwright-report/

  actions-timeline:
    needs:
      - test-e2e-general
      - test-e2e-conversion
    # skip if the workflow is called from another workflow
    if: ${{ !cancelled() && contains(github.workflow_ref, '/e2e.yml') }}

    runs-on: ubuntu-24.04
    timeout-minutes: 5
    permissions:
      actions: read

    steps:
      - name: actions-timeline
        # cspell:ignore kesin
        uses: Kesin11/actions-timeline@427ee2cf860166e404d0d69b4f2b24012bb7af4f # v2.2.3
