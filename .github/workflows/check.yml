name: Check

on:
  pull_request:
  workflow_call:
  workflow_dispatch:

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  check:
    runs-on: ubuntu-22.04

    permissions:
      contents: read # for checkout
      actions: read # for actions-timeline

    steps:
      - name: actions-timeline
        # skip if the workflow is called from another workflow
        if: contains(github.workflow_ref, '/check.yml')
        # cspell:ignore kesin
        uses: Kesin11/actions-timeline@b03a6aa289adef5534c84ccb6fbef7c975973574 # v2.1.0

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # fetch all history for commitlint

      - name: Setup bun
        uses: oven-sh/setup-bun@8f24390df009a496891208e5e36b8a1de1f45135 # v1.2.1

      - name: Setup Node.js
        # Install to use the latest version of Node.js when shebang is specified
        # ref: https://bun.sh/docs/cli/run#bun
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: package.json

      - name: Install Dependencies
        id: install
        run: bun install --frozen-lockfile
        env:
          HUSKY: 0

      - name: "commitlint (push: initial commit)"
        id: commitlint-push-initial
        # commit hash will be 000... if it doesn't exist
        if: github.event_name == 'push' && github.event.before == '0000000000000000000000000000000000000000'
        run: bun run commitlint --verbose --to ${{ github.event.after }}

      - name: commitlint (push)
        id: commitlint-push
        if: github.event_name == 'push' && steps.commitlint-push-initial.outcome == 'skipped'
        run: bun run commitlint --verbose --from ${{ github.event.before }} --to ${{ github.event.after }}

      - name: commitlint (pull_request)
        id: commitlint-pr
        if: github.event_name == 'pull_request'
        run: |
          bun run commitlint --verbose --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }}

      - name: commitlint (last commit)
        if: steps.commitlint-push-initial.outcome == 'skipped' && steps.commitlint-push.outcome == 'skipped' && steps.commitlint-pr.outcome == 'skipped'
        run: bun run commitlint --verbose --from ${{ github.sha }}~1 --to ${{ github.sha }}

      - name: ignore-sync
        # continue even if the previous step fails
        # do not use continue-on-error because it will result in a successful job
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        # run ignore-sync to check if the ignore file is up to date
        run: bun run ignore-sync

      - name: Biome
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        run: bun run biome ci --error-on-warnings .

      - name: tsc (source)
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        run: bun run tsc --project tsconfig.src.json --incremental false --noEmit

      - name: tsc (other)
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        run: bun run tsc --project tsconfig.base.json --incremental false

      - name: cspell
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        run: bun run cspell "**/*"

      - name: knip
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        run: bun run knip

      - name: Check No Files are Changes
        if: ${{ !cancelled() && steps.install.outcome == 'success' }}
        run: |
          git add .
          git diff --staged --exit-code
